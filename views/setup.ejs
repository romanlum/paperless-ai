<!DOCTYPE html>
<html lang="en" class="h-full" data-theme="light">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Paperless-ai Setup</title>
    <script src="https://cdn.tailwindcss.com/3.4.16"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link rel="stylesheet" href="css/setup.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <link rel="stylesheet" href="https://unpkg.com/tippy.js@6/dist/tippy.css" />
    <script src="https://unpkg.com/@popperjs/core@2"></script>
    <script src="https://unpkg.com/tippy.js@latest"></script>
</head>
<body class="h-full">
    <button id="themeToggle" class="theme-toggle material-button-2">
        <i class="fas fa-moon dark:fas fa-sun"></i>
    </button>

    <div class="min-h-full">
        <nav class="modern-nav">
            <div class="mx-auto max-w-7xl px-6 lg:px-8">
                <div class="flex h-24 items-center justify-between">
                    <div class="flex items-center space-x-6">
                        <div class="nav-icon">
                            <i class="fas fa-file-alt text-white text-xl"></i>
                        </div>
                        <div>
                            <h1 class="text-2xl font-bold">Paperless-AI <small><%= config.PAPERLESS_AI_VERSION %></small></h1>
                            <p class="text-sm text-secondary">Configuration Setup</p>
                        </div>
                    </div>
                </div>
            </div>
        </nav>

        <main class="py-10">
            <div class="mx-auto max-w-3xl px-6 lg:px-8">
                <!-- Main Form Card -->
                <div class="material-card">
                    <form id="setupForm" class="space-y-12">
                        <!-- User Setup -->
                        <section>
                            <h2 class="section-title">
                                <i class="fas fa-user"></i>
                                User Settings
                            </h2>
                            <div class="space-y-6">
                                <div class="form-group">
                                    <label for="username">Username</label>
                                    <input type="text" 
                                           id="username" 
                                           name="username"
                                           class="modern-input"
                                           required>
                                </div>
                        
                                <div class="form-group">
                                    <label for="password">Password</label>
                                    <div class="password-input">
                                        <input type="password" 
                                               id="password" 
                                               name="password"
                                               class="modern-input"
                                               required>
                                        <button type="button" class="password-toggle" data-input="password">
                                            <i class="fas fa-eye"></i>
                                        </button>
                                    </div>
                                    <div id="password-strength" class="mt-2"></div>
                                </div>
                        
                                <div class="form-group">
                                    <label for="confirmPassword">Confirm Password</label>
                                    <div class="password-input">
                                        <input type="password" 
                                               id="confirmPassword" 
                                               name="confirmPassword"
                                               class="modern-input"
                                               required>
                                        <button type="button" class="password-toggle" data-input="confirmPassword">
                                            <i class="fas fa-eye"></i>
                                        </button>
                                    </div>
                                    <div id="password-match" class="mt-2"></div>
                                </div>
                            </div>
                        </section>
                        <!-- Connection Section -->
                        <section>
                            <h2 class="section-title">
                                <i class="fas fa-link"></i>
                                Connection Settings
                            </h2>
                            <div class="space-y-6">
                                <div class="form-group">
                                    <label for="paperlessUrl" class="flex items-center gap-2">
                                        Paperless-ngx API URL
                                        <button type="button" 
                                                class="help-btn text-gray-400 hover:text-gray-600 focus:outline-none"
                                                id="urlHelp">
                                            <i class="fas fa-circle-question"></i>
                                        </button>
                                    </label>
                                    <input type="text" 
                                           id="paperlessUrl" 
                                           name="paperlessUrl"
                                           value="<%= config.PAPERLESS_API_URL %>"
                                           class="modern-input"
                                           placeholder="http://your-paperless-instance:8000"
                                           required>
                                </div>

                                <div class="form-group">
                                    <label for="paperlessToken">API Token</label>
                                    <div class="password-input">
                                        <input type="password" 
                                               id="paperlessToken" 
                                               name="paperlessToken"
                                               value="<%= config.PAPERLESS_API_TOKEN %>"
                                               class="modern-input"
                                               required>
                                        <button type="button" class="password-toggle" data-input="paperlessToken">
                                            <i class="fas fa-eye"></i>
                                        </button>
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label for="paperlessUsername" class="flex items-center gap-2">
                                        Paperless-ngx Username
                                    </label>
                                    <input type="text" 
                                           id="paperlessUsername" 
                                           name="paperlessUsername"
                                           value="<%= config.PAPERLESS_USERNAME %>"
                                           class="modern-input"
                                           placeholder="Your Paperless-ngx username"
                                           required>
                                </div>
                            </div>
                        </section>

                        <!-- AI Configuration Section -->
                        <section>
                            <h2 class="section-title">
                                <i class="fas fa-robot"></i>
                                AI Configuration
                            </h2>
                            <div class="space-y-6">
                                <div class="form-group">
                                    <label for="aiProvider">AI Provider</label>
                                    <select id="aiProvider" 
                                            name="aiProvider"
                                            class="modern-input">
                                        <option value="openai" <%= config.AI_PROVIDER === 'openai' ? 'selected' : '' %>>
                                            OpenAI (ChatGPT)
                                        </option>
                                        <option value="ollama" <%= config.AI_PROVIDER === 'ollama' ? 'selected' : '' %>>
                                            Ollama (Local LLM)
                                        </option>
                                        <option value="custom" <%= config.AI_PROVIDER === 'custom' ? 'selected' : '' %>>
                                            Custom
                                        </option>
                                        <option value="azureOpenai" <%= config.AI_PROVIDER === 'azureOpenai' ? 'selected' : '' %>>
                                            Azure OpenAI
                                        </option>
                                    </select>
                                </div>
                        
                                <!-- OpenAI Settings -->
                                <div id="openaiSettings" class="provider-settings">
                                    <div class="form-group">
                                        <label for="openaiKey">OpenAI API Key</label>
                                        <div class="password-input">
                                            <input type="password" 
                                                   id="openaiKey" 
                                                   name="openaiKey"
                                                   value="<%= config.OPENAI_API_KEY %>"
                                                   class="modern-input">
                                            <button type="button" class="password-toggle" data-input="openaiKey">
                                                <i class="fas fa-eye"></i>
                                            </button>
                                        </div>
                                    </div>
                                    
                                    <div class="form-group">
                                        <label for="openaiModel">OpenAI Model</label>
                                        <select id="openaiModel" 
                                                name="openaiModel"
                                                class="modern-input">
                                            <option value="gpt-3.5-turbo-0125" <%= config.OPENAI_MODEL === 'gpt-3.5-turbo-0125' ? 'selected' : '' %>>GPT-3.5 Turbo</option>
                                            <option value="gpt-4o" <%= config.OPENAI_MODEL === 'gpt-4o' ? 'selected' : '' %>>GPT-4o</option>
                                            <option value="gpt-4o-mini" <%= config.OPENAI_MODEL === 'gpt-4o-mini' ? 'selected' : '' %>>GPT-4o-mini (Best value)</option>
                                        </select>
                                    </div>
                                </div>
                        
                                <!-- Ollama Settings -->
                                <div id="ollamaSettings" class="provider-settings">
                                    <div class="form-group">
                                        <label for="ollamaUrl">Ollama API URL</label>
                                        <input type="text" 
                                               id="ollamaUrl" 
                                               name="ollamaUrl"
                                               value="<%= config.OLLAMA_API_URL %>"
                                               class="modern-input">
                                    </div>
                                    
                                    <div class="form-group">
                                        <label for="ollamaModel">Ollama Model</label>
                                        <input type="text" 
                                               id="ollamaModel" 
                                               name="ollamaModel"
                                               value="<%= config.OLLAMA_MODEL %>"
                                               class="modern-input">
                                    </div>
                                </div>
                        
                                <!-- Custom Provider Settings -->
                                <div id="customSettings" class="provider-settings">
                                    <div class="form-group">
                                        <label for="customBaseUrl">Base URL</label>
                                        <input type="text" 
                                               id="customBaseUrl" 
                                               name="customBaseUrl"
                                               value="<%= config.CUSTOM_BASE_URL %>"
                                               class="modern-input"
                                               placeholder="https://api.example.com">
                                    </div>
                                    
                                    <div class="form-group">
                                        <label for="customApiKey">API Key</label>
                                        <div class="password-input">
                                            <input type="password" 
                                                   id="customApiKey" 
                                                   name="customApiKey"
                                                   value="<%= config.CUSTOM_API_KEY %>"
                                                   class="modern-input">
                                            <button type="button" class="password-toggle" data-input="customApiKey">
                                                <i class="fas fa-eye"></i>
                                            </button>
                                        </div>
                                    </div>
                                    
                                    <div class="form-group">
                                        <label for="customModel">Model</label>
                                        <input type="text" 
                                               id="customModel" 
                                               name="customModel"
                                               value="<%= config.CUSTOM_MODEL %>"
                                               class="modern-input"
                                               placeholder="Enter model name">
                                    </div>
                                </div>
                                <!-- AZURE OpenAI Settings -->
                                <div id="azureOpenaiSettings" class="provider-settings">
                                    <div class="form-group">
                                        <label for="azureOpenaiKey">API Key</label>
                                        <div class="password-input">
                                            <input type="password" 
                                                   id="azureOpenaiKey" 
                                                   name="azureOpenaiKey"
                                                   value="<%= config.AZURE_OPENAI_KEY %>"
                                                   class="modern-input">
                                            <button type="button" class="password-toggle" data-input="azureOpenaiKey">
                                                <i class="fas fa-eye"></i>
                                            </button>
                                        </div>
                                    </div>
                                    
                                    <div class="form-group">
                                        <label for="azureOpenaiEndpoint">Endpoint</label>
                                        <input type="text" 
                                               id="azureOpenaiEndpoint" 
                                               name="azureOpenaiEndpoint"
                                               value="<%= config.AZURE_OPENAI_ENDPOINT %>"
                                               class="modern-input">
                                    </div>

                                    <div class="form-group">
                                        <label for="azureOpenaiDeployment">Deployment</label>
                                        <input type="text" 
                                               id="azureOpenaiDeployment" 
                                               name="azureOpenaiDeployment"
                                               value="<%= config.AZURE_OPENAI_DEPLOYMENT_NAME %>"
                                               class="modern-input">
                                    </div>
                                </div>  
                            </div>
                        </section>

                        <!-- Advanced Settings Section -->
                        <section>
                            <h2 class="section-title">
                                <i class="fas fa-cog"></i>
                                Advanced Settings
                            </h2>
                            <div class="space-y-6">
                                <div class="form-group">
                                    <label for="useExistingData">Use existing Correspondents and Tags?</label>
                                    <select id="useExistingData" 
                                            name="useExistingData" 
                                            class="modern-input">
                                        <option value="no" <%= config.USE_EXISTING_DATA === 'no' ? 'selected' : '' %>>No</option>
                                        <option value="yes" <%= config.USE_EXISTING_DATA === 'yes' ? 'selected' : '' %>>Yes</option>
                                    </select>
                                </div>

                                <div class="form-group">
                                    <label for="scanInterval">Scan Interval (Cron Format)</label>
                                    <input type="text" 
                                           id="scanInterval" 
                                           name="scanInterval"
                                           value="<%= config.SCAN_INTERVAL %>"
                                           class="modern-input"
                                           required>
                                    <p class="help-text">Default: every 30 minutes</p>
                                </div>

                                <div class="form-group">
                                    <label for="showTags">Process only specific pre tagged documents?</label>
                                    <select id="showTags" 
                                            name="showTags" 
                                            class="modern-input">
                                        <option value="no" <%= config.PROCESS_PREDEFINED_DOCUMENTS === 'no' ? 'selected' : '' %>>No</option>
                                        <option value="yes" <%= config.PROCESS_PREDEFINED_DOCUMENTS === 'yes' ? 'selected' : '' %>>Yes</option>
                                    </select>
                                </div>

                                <!-- Tags Input -->
                                <div id="tagsInputSection" class="<%= config.PROCESS_PREDEFINED_DOCUMENTS === 'yes' ? '' : 'hidden' %>">
                                    <div class="form-group">
                                        <label for="tagInput">Tags</label>
                                        <div class="tag-input-container">
                                            <input type="text" 
                                                id="tagInput" 
                                                class="modern-input"
                                                placeholder="Enter a tag and press Enter">
                                            <button type="button" 
                                                    class="material-button add-tag-btn">
                                                <i class="fas fa-plus"></i>
                                                Add
                                            </button>
                                        </div>
                                        <div id="tagsContainer" class="tags-container">
                                            <% if (config.TAGS && Array.isArray(config.TAGS) && config.TAGS.length > 0) { %>
                                                <% config.TAGS.forEach(tag => { %>
                                                    <div class="modern-tag fade-in">
                                                        <span><%= tag %></span>
                                                        <button type="button"><i class="fas fa-times"></i></button>
                                                    </div>
                                                <% }); %>
                                            <% } %>
                                        </div>
                                        <input type="hidden" id="tags" name="tags" value="<%= Array.isArray(config.TAGS) ? config.TAGS.join(',') : '' %>">
                                    </div>
                                </div>
                                
                                <!-- AI Tag identification -->
                                <hr/>
                                <div class="form-group">
                                    <label for="aiProcessedTag">Add AI-processed tag to documents?</label>
                                    <select id="aiProcessedTag" 
                                            name="aiProcessedTag" 
                                            class="modern-input">
                                        <option value="no" <%= config.ADD_AI_PROCESSED_TAG === 'no' ? 'selected' : '' %>>No</option>
                                        <option value="yes" <%= config.ADD_AI_PROCESSED_TAG === 'yes' ? 'selected' : '' %>>Yes</option>
                                    </select>
                                </div>
                                <div id="aiTagNameSection" class="<%= config.ADD_AI_PROCESSED_TAG === 'yes' ? '' : 'hidden' %>">
                                    <div class="form-group">
                                        <label for="aiTagName">AI-processed Tag Name</label>
                                        <input type="text" 
                                            id="aiTagName" 
                                            name="aiTagName"
                                            value="<%= config.AI_PROCESSED_TAG_NAME || 'ai-processed' %>"
                                            class="modern-input"
                                            placeholder="ai-processed">
                                        <p class="help-text">This tag will be added to documents after AI processing</p>
                                    </div>
                                </div>
                                
                                <hr/>
                                <div class="form-group">
                                    <label for="usePromptTags">Use specific tags in prompt?</label>
                                    <select id="usePromptTags" 
                                            name="usePromptTags" 
                                            class="modern-input">
                                        <option value="no" <%= config.USE_PROMPT_TAGS === 'no' ? 'selected' : '' %>>No</option>
                                        <option value="yes" <%= config.USE_PROMPT_TAGS === 'yes' ? 'selected' : '' %>>Yes</option>
                                    </select>
                                </div>

                                <div id="promptTagsSection" class="<%= config.USE_PROMPT_TAGS === 'yes' ? '' : 'hidden' %>">
                                    <div class="form-group">
                                        <label for="promptTagInput">Prompt Tags</label>
                                        <div class="tag-input-container">
                                            <input type="text" 
                                                id="promptTagInput" 
                                                class="modern-input"
                                                placeholder="Enter a tag and press Enter">
                                            <button type="button" 
                                                    class="material-button add-prompt-tag-btn">
                                                <i class="fas fa-plus"></i>
                                                Add
                                            </button>
                                        </div>
                                        <div id="promptTagsContainer" class="tags-container">
                                            <% if (config.PROMPT_TAGS && Array.isArray(config.PROMPT_TAGS) && config.PROMPT_TAGS.length > 0) { %>
                                                <% config.PROMPT_TAGS.forEach(tag => { %>
                                                    <div class="modern-tag fade-in">
                                                        <span><%= tag %></span>
                                                        <button type="button"><i class="fas fa-times"></i></button>
                                                    </div>
                                                <% }); %>
                                            <% } %>
                                        </div>
                                        <input type="hidden" id="promptTags" name="promptTags" value="<%= Array.isArray(config.PROMPT_TAGS) ? config.PROMPT_TAGS.join(',') : '' %>">
                                        <p class="help-text">These tags will be exclusively used in the AI prompt</p>
                                    </div>
                                </div>
                                
                                <hr/>
                                <!-- System Prompt -->
                                <div class="form-group">
                                    <label for="systemPrompt">Prompt Description</label>
                                    <div class="prompt-container">
                                        <textarea id="systemPrompt" 
                                                  name="systemPrompt"
                                                  rows="8"
                                                  class="modern-input"
                                                  placeholder="Describe how the AI should analyze your documents..."><%= config.SYSTEM_PROMPT %></textarea>
                                        <button id="systemPromptBtn" type="button" 
                                                class="material-button example-btn">
                                            <i class="fas fa-lightbulb"></i>
                                            Example
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </section>

                        <!-- Submit Button -->
                        <div class="pt-6">
                            <button type="submit" class="material-button submit-btn">
                                <i class="fas fa-save"></i>
                                Save Configuration
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </main>
</div>

<!-- Scripts -->
<script src="js/setup.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    document.addEventListener('DOMContentLoaded', (event) => {
    const systemPromptTextarea = document.getElementById('systemPrompt');
    systemPromptTextarea.value = systemPromptTextarea.value.replace(/\\n/g, '\n');

    // Form submission handler
    const setupForm = document.getElementById('setupForm');
    setupForm.addEventListener('submit', async (e) => {
        e.preventDefault();
        
        // Check if processing all documents without specific tags
        const showTags = document.getElementById('showTags').value;
        if (showTags === 'no') {
            const result = await Swal.fire({
                icon: 'warning',
                title: 'Attention!',
                html: `
                    <p>You haven't selected any specific tags for document processing.</p>
                    <p class="mt-4"><strong>This means ALL documents will be automatically processed by the AI system!</strong></p>
                    <p class="mt-4">Do you want to continue?</p>
                `,
                showCancelButton: true,
                confirmButtonText: 'Yes, continue',
                cancelButtonText: 'No, cancel',
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33'
            });

            if (!result.isConfirmed) {
                // User cancelled - set showTags to 'yes' and scroll to it
                document.getElementById('showTags').value = 'yes';
                // Trigger the change event to show the tags input section
                document.getElementById('showTags').dispatchEvent(new Event('change'));
                // Scroll to the element
                document.getElementById('showTags').scrollIntoView({ behavior: 'smooth', block: 'center' });
                return;
            }
        }

        // Show loading state
        const submitBtn = setupForm.querySelector('button[type="submit"]');
        const originalBtnText = submitBtn.innerHTML;
        submitBtn.disabled = true;
        submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Saving...';

        try {
            const formData = new FormData(setupForm);
            const response = await fetch('/setup', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(Object.fromEntries(formData))
            });

            const result = await response.json();

            if (result.success) {
                await Swal.fire({
                    icon: 'success',
                    title: 'Success!',
                    text: result.message,
                    timer: 2000,
                    showConfirmButton: false
                });

                if (result.restart) {
                    let countdown = 5;
                    const countdownInterval = setInterval(() => {
                        Swal.fire({
                            title: 'Restarting...',
                            text: `Application will restart in ${countdown} seconds`,
                            icon: 'info',
                            showConfirmButton: false
                        });
                        countdown--;
                        if (countdown < 0) {
                            clearInterval(countdownInterval);
                            window.location.href = '/dashboard';
                        }
                    }, 1000);
                }
            } else {
                throw new Error(result.error || 'An unknown error occurred');
            }
        } catch (error) {
            await Swal.fire({
                icon: 'error',
                title: 'Error',
                text: error.message
            });
        } finally {
            submitBtn.disabled = false;
            submitBtn.innerHTML = originalBtnText;
        }
    });
});

    // URL validation 
    let isShowingError = false;
    document.getElementById('paperlessUrl').addEventListener('blur', validateURL);

    function validateURL() {
        const paperlessUrl = document.getElementById('paperlessUrl');
        if (isShowingError) return;

        try {
            if (!paperlessUrl.value) return;
            const url = new URL(paperlessUrl.value);

            if (!['http:', 'https:'].includes(url.protocol)) {
                throw new Error('The URL must start with http:// or https://');
            }

            const hasInvalidPath = url.pathname !== '/' || url.search || url.hash;
            if (hasInvalidPath) {
                throw new Error('The URL must only contain protocol, host, and port (e.g., http://your-host:8000).');
            }
        } catch (error) {
            isShowingError = true;
            Swal.fire({
                icon: 'warning',
                title: 'Invalid URL',
                text: error.message,
                showCancelButton: true,
                confirmButtonText: 'Confirm anyway',
                cancelButtonText: 'Fix it'
            }).then((result) => {
                isShowingError = false;
                if (result.isDismissed) {
                    try {
                        const url = new URL(paperlessUrl.value);
                        const formattedURL = `${url.protocol}//${url.hostname}${url.port ? ':' + url.port : ''}`;
                        paperlessUrl.value = formattedURL;
                    } catch (formatError) {
                        console.error('Error while formatting URL:', formatError);
                    }
                }
            });
        }
    }

    function sanitizeURL() {
        const paperlessUrl = document.getElementById('paperlessUrl');
        try {
            if (!paperlessUrl.value) return;
            const url = new URL(paperlessUrl.value);
            paperlessUrl.value = `${url.protocol}//${url.hostname}${url.port ? ':' + url.port : ''}`;
        } catch (error) {
            event.preventDefault();
            console.error('Wrong URL:', error);
            Swal.fire({
                icon: 'error',
                title: 'Invalid URL',
                text: 'Please enter a valid URL. ( http[s]://your-paperless-instance:8000 )',
            });
        }
    }
</script>
<script>
    function getTooltipPlacement() {
        return window.innerWidth < 768 ? 'bottom' : 'right';
    }
    
    let tooltipInstance = tippy('#urlHelp', {
        content: `
            <div class="tooltip-content p-2">
                <h3 class="font-bold text-lg mb-2">API URL Configuration</h3>
                <p class="mb-2">The URL should follow this format:</p>
                <code class="block p-2 rounded mb-2">
                    http://your-host:8000
                </code>
                
                <p class="mb-2"><span class="font-semibold">Important Notes:</span></p>
                <ul class="list-disc pl-4">
                    <li class="mb-1">Must start with <u>http://</u> or <u>https://</u></li>
                    <li class="mb-1">Contains <strong>host/IP</strong> and optionally a <strong>port</strong></li>
                    <li class="mb-1">No additional paths or parameters</li>
                </ul>

                <div class="mt-4">
                    <p class="font-semibold mb-1">Docker Network Configuration:</p>
                    <ul class="list-disc pl-4">
                        <li class="mb-1">Using <strong>localhost</strong> or <strong>127.0.0.1</strong> won't work in Docker bridge mode</li>
                        <li class="mb-1">Use your machine's local IP (e.g., <code>192.168.1.x</code>) instead</li>
                        <li class="mb-1">Or use the Docker container name if both services are in the same network</li>
                    </ul>
                </div>

                <div class="mt-4">
                    <p class="font-semibold mb-1">Examples:</p>
                    <ul class="list-none space-y-1">
                        <li>🔸 Local IP: <code>http://192.168.1.100:8000</code></li>
                        <li>🔸 Container: <code>http://paperless-ngx:8000</code></li>
                        <li>🔸 Remote: <code>http://paperless.domain.com</code></li>
                    </ul>
                </div>

                <p class="mt-4 text-sm italic">The /api endpoint will be added automatically.</p>
            </div>
        `,
        allowHTML: true,
        placement: getTooltipPlacement(),
        interactive: true,
        theme: 'custom',
        maxWidth: 450,
        touch: 'hold',  // For mobile devices: show on long press
        trigger: 'mouseenter click',  // Show on hover or click
    });

    // Update tooltip placement on window resize
    window.addEventListener('resize', () => {
        tooltipInstance[0].setProps({ placement: getTooltipPlacement() });
    });
</script>
</body>
</html>