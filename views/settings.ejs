<!DOCTYPE html>
<html lang="en" class="h-full" data-theme="light">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Paperless-AI Dashboard</title>
    <script src="https://cdn.tailwindcss.com/3.4.16"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.0/css/all.min.css">
    <link rel="stylesheet" href="css/dashboard.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.7.0/chart.min.js"></script>
    <link rel="stylesheet" href="https://unpkg.com/tippy.js@6/dist/tippy.css" />
    <script src="https://unpkg.com/@popperjs/core@2"></script>
    <script src="https://unpkg.com/tippy.js@latest"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>
<body class="h-full">
    <button id="themeToggle" class="theme-toggle">
        <i class="fas fa-moon dark:fas fa-sun"></i>
    </button>

    <div class="layout-container">
        <!-- Sidebar -->
        <aside class="sidebar">
            <div class="sidebar-header">
                <div class="brand-icon">
                    <i class="fas fa-file-alt"></i>
                </div>
                <h1 class="brand-title">Paperless-AI<small style="display: block;"><%= version %></small></h1>
            </div>

            <nav class="sidebar-nav">
                <ul>
                    <li>
                        <a href="/dashboard" class="sidebar-link">
                            <i class="fas fa-home"></i>
                            <span>Dashboard</span>
                        </a>
                    </li>
                    <li>
                        <a href="/manual" class="sidebar-link">
                            <i class="fas fa-file-alt"></i>
                            <span>Manual</span>
                        </a>
                    </li>
                    <li>
                        <a href="/chat" class="sidebar-link">
                            <i class="fa-solid fa-comment"></i>
                            <span>Chat</span>
                        </a>
                    </li>
                    <li>
                        <a href="/playground" class="sidebar-link">
                            <i class="fa-solid fa-flask-vial"></i>
                            <span>Playground</span>
                        </a>
                    </li>
                    <li>
                        <a href="/history" class="sidebar-link">
                            <i class="fa-solid fa-clock-rotate-left"></i>
                            <span>History</span>
                        </a>
                    </li>
                    <li>
                        <a href="/settings" class="sidebar-link active">
                            <i class="fas fa-cog"></i>
                            <span>Settings</span>
                        </a>
                    </li>
                    <li>
                        <a href="/logout" class="sidebar-link">
                            <i class="fa-solid fa-right-from-bracket"></i>
                            <span>Logout</span>
                        </a>
                    </li>
                </ul>
            </nav>
        </aside>

        <!-- Main Content -->
        <main class="main-content">
            <div class="content-wrapper">
                <div class="content-header flex justify-between items-center px-6 py-4 bg-white dark:bg-gray-800 shadow-sm">
                    <h2 class="content-title text-2xl font-semibold text-gray-800 dark:text-white">Configuration</h2>
                    <div class="relative flex items-center space-x-4">API-KEY:
                        <div id="apiKeyContainer" 
                             class="relative w-48 px-4 py-2 bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-100 rounded cursor-pointer select-none filter blur-sm hover:blur-none transition-all duration-200 truncate"
                             data-api-key="<%= config.API_KEY %>"
                             title="<%= config.API_KEY %>">
                             <%= config.API_KEY %>
                        </div>
                        <button id="regenerateBtn" 
                                class="px-3 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 dark:hover:bg-blue-700 transition-colors duration-200 flex items-center space-x-2">
                            <i class="fas fa-sync-alt" id="regenerateIcon"></i>
                            <span>Regenerate</span>
                        </button>
                        <div id="copyNotification" 
                             class="absolute right-0 top-0 mt-12 w-64 bg-green-50 dark:bg-green-900 text-green-800 dark:text-green-100 border border-green-200 dark:border-green-700 rounded-lg p-3 hidden">
                            <div class="flex items-center">
                                <i class="fas fa-check-circle mr-2"></i>
                                <span>API key copied to clipboard!</span>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- Main Form Card -->
                <div class="material-card">
                    <% if (success || settingsError) { %>
                        <div class="mb-6 space-y-4">
                            <% if (success) { %>
                                <div class="flex gap-2 p-4 bg-green-50 text-green-800 border border-green-200 rounded-lg">
                                    <i class="fas fa-check-circle mt-1"></i>
                                    <p><%= success %></p>
                                </div>
                            <% } %>
                            
                            <% if (settingsError) { %>
                                <div class="flex gap-2 p-4 bg-red-50 text-red-800 border border-red-200 rounded-lg">
                                    <i class="fas fa-exclamation-triangle mt-1"></i>
                                    <p><%= settingsError %></p>
                                </div>
                            <% } %>
                        </div>
                    <% } %>
                    <form id="setupForm" class="space-y-8">
                        <!-- Connection Section -->
                        <section class="space-y-6">
                            <h2 class="text-xl font-bold flex items-center gap-2 text-primary mb-4">
                                <i class="fas fa-link"></i>
                                Connection Settings
                            </h2>
                            <div class="space-y-4">
                                <div class="space-y-2">
                                    <label for="paperlessUrl" class="flex items-center gap-2 text-sm font-medium">
                                        Paperless-ngx API URL
                                        <button type="button" class="text-gray-400 hover:text-gray-600 focus:outline-none" id="urlHelp">
                                            <i class="fas fa-circle-question"></i>
                                        </button>
                                    </label>
                                    <input type="text" 
                                           id="paperlessUrl" 
                                           name="paperlessUrl"
                                           value="<%= config.PAPERLESS_API_URL %>"
                                           class="w-full px-3 py-2 border border-gray-300 rounded-lg shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                                           placeholder="http://your-paperless-instance:8000"
                                           required>
                                </div>
        
                                <div class="space-y-2">
                                    <label for="paperlessToken" class="text-sm font-medium">API Token</label>
                                    <div class="relative">
                                        <input type="password" 
                                               id="paperlessToken" 
                                               name="paperlessToken"
                                               value="<%= config.PAPERLESS_API_TOKEN %>"
                                               class="w-full px-3 py-2 border border-gray-300 rounded-lg shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                                               required>
                                        <button type="button" class="absolute right-3 top-1/2 -translate-y-1/2 text-gray-400 hover:text-gray-600" data-input="paperlessToken">
                                            <i class="fas fa-eye"></i>
                                        </button>
                                    </div>
                                </div>

                                <div class="space-y-2">
                                    <label for="paperlessUsername" class="flex items-center gap-2 text-sm font-medium">
                                        Paperless-ngx Username
                                    </label>
                                    <input type="text" 
                                           id="paperlessUsername" 
                                           name="paperlessUsername"
                                           value="<%= config.PAPERLESS_USERNAME %>"
                                           class="w-full px-3 py-2 border border-gray-300 rounded-lg shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                                           placeholder="Your Paperless-ngx username"
                                           required>
                                </div>                                
                            </div>
                        </section>
        
                        <!-- AI Configuration Section -->
                        <section class="space-y-6">
                            <h2 class="text-xl font-bold flex items-center gap-2 text-primary mb-4">
                                <i class="fas fa-robot"></i>
                                AI Configuration
                            </h2>
                            <div class="space-y-4">
                                <div class="space-y-2">
                                    <label for="aiProvider" class="text-sm font-medium">AI Provider</label>
                                    <select id="aiProvider" 
                                            name="aiProvider"
                                            class="w-full px-3 py-2 border border-gray-300 rounded-lg shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                                        <option value="openai" <%= config.AI_PROVIDER === 'openai' ? 'selected' : '' %>>OpenAI (ChatGPT)</option>
                                        <option value="ollama" <%= config.AI_PROVIDER === 'ollama' ? 'selected' : '' %>>Ollama (Local LLM)</option>
                                        <option value="custom" <%= config.AI_PROVIDER === 'custom' ? 'selected' : '' %>>Custom</option>
                                        <option value="azureOpenai" <%= config.AI_PROVIDER === 'azureOpenai' ? 'selected' : '' %>>Azure OpenAI (ChatGPT Azure)</option>
                                    </select>
                                </div>

                                <!-- OpenAI Settings -->
                                <div id="openaiSettings" class="space-y-4">
                                    <div class="space-y-2">
                                        <label for="openaiKey" class="text-sm font-medium">OpenAI API Key</label>
                                        <div class="relative">
                                            <input type="password" 
                                                id="openaiKey" 
                                                name="openaiKey"
                                                value="<%= config.OPENAI_API_KEY %>"
                                                class="w-full px-3 py-2 border border-gray-300 rounded-lg shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                                            <button type="button" class="absolute right-3 top-1/2 -translate-y-1/2 text-gray-400 hover:text-gray-600" data-input="openaiKey">
                                                <i class="fas fa-eye"></i>
                                            </button>
                                        </div>
                                    </div>
                                    
                                    <div class="space-y-2">
                                        <label for="openaiModel" class="text-sm font-medium">OpenAI Model</label>
                                        <select id="openaiModel" 
                                                name="openaiModel"
                                                class="w-full px-3 py-2 border border-gray-300 rounded-lg shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                                            <option value="gpt-3.5-turbo-0125" <%= config.OPENAI_MODEL === 'gpt-3.5-turbo-0125' ? 'selected' : '' %>>GPT-3.5 Turbo</option>
                                            <option value="gpt-4o" <%= config.OPENAI_MODEL === 'gpt-4o' ? 'selected' : '' %>>GPT-4o</option>
                                            <option value="gpt-4o-mini" <%= config.OPENAI_MODEL === 'gpt-4o-mini' ? 'selected' : '' %>>GPT-4o-mini (Best value)</option>
                                        </select>
                                    </div>
                                </div>

                                <!-- Ollama Settings -->
                                <div id="ollamaSettings" class="space-y-4">
                                    <div class="space-y-2">
                                        <label for="ollamaUrl" class="text-sm font-medium">Ollama API URL</label>
                                        <input type="text" 
                                            id="ollamaUrl" 
                                            name="ollamaUrl"
                                            value="<%= config.OLLAMA_API_URL %>"
                                            class="w-full px-3 py-2 border border-gray-300 rounded-lg shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                                    </div>
                                    
                                    <div class="space-y-2">
                                        <label for="ollamaModel" class="text-sm font-medium">Ollama Model</label>
                                        <input type="text" 
                                            id="ollamaModel" 
                                            name="ollamaModel"
                                            value="<%= config.OLLAMA_MODEL %>"
                                            class="w-full px-3 py-2 border border-gray-300 rounded-lg shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                                    </div>
                                </div>

                                <!-- Custom Provider Settings -->
                                <div id="customSettings" class="space-y-4">
                                    <div class="space-y-2">
                                        <label for="customBaseUrl" class="text-sm font-medium">Base URL</label>
                                        <input type="text" 
                                            id="customBaseUrl" 
                                            name="customBaseUrl"
                                            value="<%= config.CUSTOM_BASE_URL %>"
                                            class="w-full px-3 py-2 border border-gray-300 rounded-lg shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                                            placeholder="https://api.example.com">
                                    </div>

                                    <div class="space-y-2">
                                        <label for="customApiKey" class="text-sm font-medium">API Key</label>
                                        <div class="relative">
                                            <input type="password" 
                                                id="customApiKey" 
                                                name="customApiKey"
                                                value="<%= config.CUSTOM_API_KEY %>"
                                                class="w-full px-3 py-2 border border-gray-300 rounded-lg shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                                            <button type="button" class="absolute right-3 top-1/2 -translate-y-1/2 text-gray-400 hover:text-gray-600" data-input="customApiKey">
                                                <i class="fas fa-eye"></i>
                                            </button>
                                        </div>
                                    </div>

                                    <div class="space-y-2">
                                        <label for="customModel" class="text-sm font-medium">Model</label>
                                        <input type="text" 
                                            id="customModel" 
                                            name="customModel"
                                            value="<%= config.CUSTOM_MODEL %>"
                                            class="w-full px-3 py-2 border border-gray-300 rounded-lg shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                                            placeholder="Enter model name">
                                    </div>
                                </div>

                                 <!-- azure openai Settings -->
                                 <div id="azureOpenaiSettings" class="space-y-4">
                                    <div class="space-y-2">
                                        <label for="azureOpenaiKey" class="text-sm font-medium">API Key</label>
                                        <div class="relative">
                                            <input type="password" 
                                                   id="azureOpenaiKey" 
                                                   name="azureOpenaiKey"
                                                   value="<%= config.AZURE_OPENAI_KEY %>"
                                                   class="w-full px-3 py-2 border border-gray-300 rounded-lg shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                                            <button type="button" class="absolute right-3 top-1/2 -translate-y-1/2 text-gray-400 hover:text-gray-600" data-input="azureOpenaiKey">
                                                <i class="fas fa-eye"></i>
                                            </button>
                                        </div>
                                    </div>
                                    <div class="space-y-2">
                                        <label for="azureOpenaiEndpoint" class="text-sm font-medium">Endpoint</label>
                                        <input type="text" 
                                               id="azureOpenaiEndpoint" 
                                               name="azureOpenaiEndpoint"
                                               value="<%= config.AZURE_OPENAI_ENDPOINT %>"
                                               class="w-full px-3 py-2 border border-gray-300 rounded-lg shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                                    </div>
                                    
                                    <div class="space-y-2">
                                        <label for="azureOpenaiDeployment" class="text-sm font-medium">Deployment</label>
                                        <input type="text" 
                                               id="azureOpenaiDeployment" 
                                               name="azureOpenaiDeployment"
                                               value="<%= config.AZURE_OPENAI_DEPLOYMENT_NAME %>"
                                               class="w-full px-3 py-2 border border-gray-300 rounded-lg shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                                    </div>
                                </div>
                            </div>
                        </section>
        
                        <!-- Advanced Settings Section -->
                        <section class="space-y-6">
                            <h2 class="text-xl font-bold flex items-center gap-2 text-primary mb-4">
                                <i class="fas fa-cog"></i>
                                Advanced Settings
                            </h2>
                            <div class="space-y-2">
                                <div class="form-group">
                                    <label for="useExistingData">Use existing Correspondents and Tags?</label>
                                    <select id="useExistingData" 
                                            name="useExistingData" 
                                            class="w-full px-3 py-2 border border-gray-300 rounded-lg shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                                        <option value="no" <%= config.USE_EXISTING_DATA === 'no' ? 'selected' : '' %>>No</option>
                                        <option value="yes" <%= config.USE_EXISTING_DATA === 'yes' ? 'selected' : '' %>>Yes</option>
                                    </select>
                                </div>
                                <div class="space-y-2">
                                    <label for="scanInterval" class="text-sm font-medium">Scan Interval (Cron Format)</label>
                                    <input type="text" 
                                           id="scanInterval" 
                                           name="scanInterval"
                                           value="<%= config.SCAN_INTERVAL %>"
                                           class="w-full px-3 py-2 border border-gray-300 rounded-lg shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                                           required>
                                    <p class="text-sm text-gray-500">Default: every 30 minutes</p>
                                </div>
        
                                <!-- Tags Section -->
                                <div class="space-y-4">
                                    <div class="space-y-2">
                                        <label for="showTags" class="text-sm font-medium">Process only specific pre tagged documents?</label>
                                        <select id="showTags" 
                                                name="showTags" 
                                                class="w-full px-3 py-2 border border-gray-300 rounded-lg shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                                            <option value="no" <%= config.PROCESS_PREDEFINED_DOCUMENTS === 'no' ? 'selected' : '' %>>No</option>
                                            <option value="yes" <%= config.PROCESS_PREDEFINED_DOCUMENTS === 'yes' ? 'selected' : '' %>>Yes</option>
                                        </select>
                                    </div>
        
                                    <div id="tagsInputSection" class="<%= config.PROCESS_PREDEFINED_DOCUMENTS === 'yes' ? '' : 'hidden' %> space-y-4">
                                        <div class="space-y-2">
                                            <label for="tagInput" class="text-sm font-medium">Tags</label>
                                            <div class="flex gap-2">
                                                <input type="text" 
                                                    id="tagInput" 
                                                    class="flex-1 px-3 py-2 border border-gray-300 rounded-lg shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                                                    placeholder="Enter a tag and press Enter">
                                                <button type="button" 
                                                        class="px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 focus:ring-2 focus:ring-blue-500 focus:ring-offset-2">
                                                    <i class="fas fa-plus mr-2"></i>
                                                    Add
                                                </button>
                                            </div>
                                            <div id="tagsContainer" class="flex flex-wrap gap-2 mt-2">
                                                <% if (config.TAGS && Array.isArray(config.TAGS) && config.TAGS.length > 0) { %>
                                                    <% config.TAGS.forEach(tag => { %>
                                                        <div class="bg-blue-100 text-blue-800 px-3 py-1 rounded-full flex items-center gap-2">
                                                            <span><%= tag %></span>
                                                            <button type="button" class="hover:text-blue-600"><i class="fas fa-times"></i></button>
                                                        </div>
                                                    <% }); %>
                                                <% } %>
                                            </div>
                                            <input type="hidden" id="tags" name="tags" value="<%= Array.isArray(config.TAGS) ? config.TAGS.join(',') : '' %>">
                                        </div>
                                    </div>
                                </div>
        
                                <!-- AI Tag Section -->
                                <div class="border-t pt-4 space-y-4">
                                    <div class="space-y-2">
                                        <label for="aiProcessedTag" class="text-sm font-medium">Add AI-processed tag to documents?</label>
                                        <select id="aiProcessedTag" 
                                                name="aiProcessedTag" 
                                                class="w-full px-3 py-2 border border-gray-300 rounded-lg shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                                            <option value="no" <%= config.ADD_AI_PROCESSED_TAG === 'no' ? 'selected' : '' %>>No</option>
                                            <option value="yes" <%= config.ADD_AI_PROCESSED_TAG === 'yes' ? 'selected' : '' %>>Yes</option>
                                        </select>
                                    </div>
        
                                    <div id="aiTagNameSection" class="<%= config.ADD_AI_PROCESSED_TAG === 'yes' ? '' : 'hidden' %> space-y-2">
                                        <label for="aiTagName" class="text-sm font-medium">AI-processed Tag Name</label>
                                        <input type="text" 
                                            id="aiTagName" 
                                            name="aiTagName"
                                            value="<%= config.AI_PROCESSED_TAG_NAME || 'ai-processed' %>"
                                            class="w-full px-3 py-2 border border-gray-300 rounded-lg shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                                            placeholder="ai-processed">
                                        <p class="text-sm text-gray-500">This tag will be added to documents after AI processing</p>
                                    </div>
                                </div>
        
                                <!-- Prompt Tags Section -->
                                <div class="border-t pt-4 space-y-4">
                                    <div class="space-y-2">
                                        <label for="usePromptTags" class="text-sm font-medium">Use specific tags in prompt?</label>
                                        <select id="usePromptTags" 
                                                name="usePromptTags" 
                                                class="w-full px-3 py-2 border border-gray-300 rounded-lg shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                                            <option value="no" <%= config.USE_PROMPT_TAGS === 'no' ? 'selected' : '' %>>No</option>
                                            <option value="yes" <%= config.USE_PROMPT_TAGS === 'yes' ? 'selected' : '' %>>Yes</option>
                                        </select>
                                    </div>
        
                                    <div id="promptTagsSection" class="<%= config.USE_PROMPT_TAGS === 'yes' ? '' : 'hidden' %> space-y-4">
                                        <div class="space-y-2">
                                            <label for="promptTagInput" class="text-sm font-medium">Prompt Tags</label>
                                            <div class="flex gap-2">
                                                <input type="text" 
                                                    id="promptTagInput" 
                                                    class="flex-1 px-3 py-2 border border-gray-300 rounded-lg shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                                                    placeholder="Enter a tag and press Enter">
                                                <button type="button" 
                                                        class="px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 focus:ring-2 focus:ring-blue-500 focus:ring-offset-2">
                                                    <i class="fas fa-plus mr-2"></i>
                                                    Add
                                                </button>
                                            </div>
                                            <div id="promptTagsContainer" class="flex flex-wrap gap-2 mt-2">
                                                <% if (config.PROMPT_TAGS && Array.isArray(config.PROMPT_TAGS) && config.PROMPT_TAGS.length > 0) { %>
                                                    <% config.PROMPT_TAGS.forEach(tag => { %>
                                                        <div class="bg-blue-100 text-blue-800 px-3 py-1 rounded-full flex items-center gap-2">
                                                            <span><%= tag %></span>
                                                            <button type="button" class="hover:text-blue-600"><i class="fas fa-times"></i></button>
                                                        </div>
                                                    <% }); %>
                                                <% } %>
                                            </div>
                                            <input type="hidden" id="promptTags" name="promptTags" value="<%= Array.isArray(config.PROMPT_TAGS) ? config.PROMPT_TAGS.join(',') : '' %>">
                                            <p class="text-sm text-gray-500">These tags will be exclusively used in the AI prompt</p>
                                        </div>
                                    </div>
                                </div>
        
                                <!-- System Prompt Section -->
                                <div class="border-t pt-4 space-y-4">
                                    <div class="space-y-2">
                                        <label for="systemPrompt" class="text-sm font-medium">Prompt Description</label>
                                        <div class="space-y-2">
                                            <textarea id="systemPrompt" 
                                                      name="systemPrompt"
                                                      rows="8"
                                                      class="w-full px-3 py-2 border border-gray-300 rounded-lg shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                                                      placeholder="Describe how the AI should analyze your documents..."><%= config.SYSTEM_PROMPT %></textarea>
                                            <button id="systemPromptBtn" type="button" 
                                                    class="inline-flex items-center px-4 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 focus:ring-2 focus:ring-gray-500 focus:ring-offset-2">
                                                <i class="fas fa-lightbulb mr-2"></i>
                                                Example
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </section>
        
                        <!-- Submit Button -->
                        <div class="border-t pt-6">
                            <button type="submit" class="w-full px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 flex items-center justify-center gap-2">
                                <i class="fas fa-save"></i>
                                Save Configuration
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </main>
    </div>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const apiKeyContainer = document.getElementById('apiKeyContainer');
            const copyNotification = document.getElementById('copyNotification');
            let timeoutId;
        
            apiKeyContainer.addEventListener('click', async function() {
                const apiKey = this.dataset.apiKey;
                try {
                    await navigator.clipboard.writeText(apiKey);
                    
                    // Show notification
                    copyNotification.classList.remove('hidden');
                    copyNotification.classList.add('flex');
                    
                    // Hide notification after 2 seconds
                    clearTimeout(timeoutId);
                    timeoutId = setTimeout(() => {
                        copyNotification.classList.add('hidden');
                        copyNotification.classList.remove('flex');
                    }, 2000);
                } catch (err) {
                    console.error('Failed to copy text: ', err);
                }
            });
        
            // Optional: Re-blur when mouse leaves
            apiKeyContainer.addEventListener('mouseleave', function() {
                this.classList.add('blur-sm');
            });
        
            apiKeyContainer.addEventListener('mouseenter', function() {
                this.classList.remove('blur-sm');
            });
        });
    </script>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        const apiKeyContainer = document.getElementById('apiKeyContainer');
        const copyNotification = document.getElementById('copyNotification');
        const regenerateBtn = document.getElementById('regenerateBtn');
        const regenerateIcon = document.getElementById('regenerateIcon');
        let timeoutId;
    
        function showNotification(message, isError = false) {
            const notificationBox = copyNotification;
            const icon = notificationBox.querySelector('i');
            const text = notificationBox.querySelector('span');
    
            // Reset classes
            notificationBox.className = 'absolute right-0 top-0 mt-12 w-64 rounded-lg p-3 border';
            icon.className = 'mr-2 fas';
    
            if (isError) {
                notificationBox.classList.add('bg-red-50', 'text-red-800', 'border-red-200');
                icon.classList.add('fa-exclamation-circle');
            } else {
                notificationBox.classList.add('bg-green-50', 'text-green-800', 'border-green-200');
                icon.classList.add('fa-check-circle');
            }
    
            text.textContent = message;
            notificationBox.classList.remove('hidden');
            notificationBox.classList.add('flex');
    
            clearTimeout(timeoutId);
            timeoutId = setTimeout(() => {
                notificationBox.classList.add('hidden');
                notificationBox.classList.remove('flex');
            }, 2000);
        }
    
        // Copy functionality
        apiKeyContainer.addEventListener('click', async function() {
            try {
                await navigator.clipboard.writeText(this.dataset.apiKey);
                showNotification('API key copied to clipboard!');
            } catch (err) {
                showNotification('Failed to copy API key!', true);
            }
        });
    
        // Blur functionality
        apiKeyContainer.addEventListener('mouseleave', function() {
            this.classList.add('blur-sm');
        });
    
        apiKeyContainer.addEventListener('mouseenter', function() {
            this.classList.remove('blur-sm');
        });
    
        // Regenerate Button functionality
        regenerateBtn.addEventListener('click', async function() {
            this.disabled = true;
            regenerateIcon.classList.add('animate-spin');
    
            try {
                const response = await fetch('/api/key-regenerate', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });
    
                if (response.ok) {
                    const data = await response.json();
                    
                    // Wait 5 seconds
                    await new Promise(resolve => setTimeout(resolve, 5000));
                    
                    // Update key container
                    apiKeyContainer.textContent = data.newKey;
                    apiKeyContainer.dataset.apiKey = data.newKey;
                    apiKeyContainer.title = data.newKey;
                    
                    showNotification('New API key generated!');
                } else {
                    throw new Error('Failed to regenerate key');
                }
            } catch (error) {
                console.error('Error:', error);
                showNotification('Failed to regenerate API key!', true);
            } finally {
                regenerateBtn.disabled = false;
                regenerateIcon.classList.remove('animate-spin');
            }
        });
    });
    </script>
    <script src="js/settings.js"></script>
</body>
</html>